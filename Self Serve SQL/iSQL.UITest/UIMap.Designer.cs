// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace iSQL_UITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenProjectIndexPage - Use 'OpenProjectIndexPageParams' to pass parameters into this method.
        /// </summary>
        public void OpenProjectIndexPage()
        {
            #region Variable Declarations
            BrowserWindow uIIndexWindowsInternetWindow = this.UIIndexWindowsInternetWindow;
            #endregion

            // Go to web page 'http://localhost:2425/Project'
            uIIndexWindowsInternetWindow.NavigateToUrl(new System.Uri(this.OpenProjectIndexPageParams.UIIndexWindowsInternetWindowUrl));
        }
        
        /// <summary>
        /// ProjectIndex_CreateNew
        /// </summary>
        public void ProjectIndex_CreateNew()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIMainCustom.UICreateNewHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(33, 10));
        }
        
        /// <summary>
        /// ProjectIndex_CreateNew_GPSData - Use 'ProjectIndex_CreateNew_GPSDataParams' to pass parameters into this method.
        /// </summary>
        public void ProjectIndex_CreateNew_GPSData()
        {
            #region Variable Declarations
            HtmlEdit uINameEdit = this.UICreateWindowsInterneWindow.UICreateDocument.UINameEdit;
            HtmlEdit uIDescriptionEdit = this.UICreateWindowsInterneWindow.UICreateDocument.UIDescriptionEdit;
            HtmlEdit uIContactInfoEdit = this.UICreateWindowsInterneWindow.UICreateDocument.UIContactInfoEdit;
            HtmlCheckBox uIIsActiveCheckBox = this.UICreateWindowsInterneWindow.UICreateDocument.UIIsActiveCheckBox;
            #endregion

            // Type 'GPS' in 'Name' text box
            uINameEdit.Text = this.ProjectIndex_CreateNew_GPSDataParams.UINameEditText;

            // Type 'Global Pricing System' in 'Description' text box
            uIDescriptionEdit.Text = this.ProjectIndex_CreateNew_GPSDataParams.UIDescriptionEditText;

            // Type 'Owner:  erin.d.rakickas, joseph.m.curran' in 'ContactInfo' text box
            uIContactInfoEdit.Text = this.ProjectIndex_CreateNew_GPSDataParams.UIContactInfoEditText;

            // Select 'IsActive' check box
            uIIsActiveCheckBox.Checked = this.ProjectIndex_CreateNew_GPSDataParams.UIIsActiveCheckBoxChecked;
        }
        
        /// <summary>
        /// ProjectIndex_CreateNew_CreateButton
        /// </summary>
        public void ProjectIndex_CreateNew_CreateButton()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UICreateWindowsInterneWindow.UICreateDocument.UIMainCustom.UICreateButton;
            #endregion

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(23, 11));
        }
        
        /// <summary>
        /// ProjectIndex_Details_GPS
        /// </summary>
        public void ProjectIndex_Details_GPS()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIMainCustom.UIDetailsHyperlink;
            #endregion

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink, new Point(20, 13));
        }
        
        /// <summary>
        /// ProjectIndex_Details_GPS_AssertDetails - Use 'ProjectIndex_Details_GPS_AssertDetailsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ProjectIndex_Details_GPS_AssertDetails()
        {
            #region Variable Declarations
            HtmlDocument uIDetailsDocument = this.UIDetailsWindowsInternWindow.UIDetailsDocument;
            #endregion

            // Verify that 'Details' document's property 'InnerText' equals ' SQL deployment self service made easy...Home Admin Help Search   Details
            //Project
            //Name
            //GPS 
            //Description
            //Global Pricing System 
            //ContactInfo
            //Owner: erin.d.rakickas, joseph.m.curran 
            //IsActive
            //  
            //Edit | Back to List   
            //© Accenture Performance Engeeinger & Data Arch Group 2011, All rights reserved. This tool is currently owned by Scott Albrecht . Sql Lint ToolContact USLink 3Link 4Link 5Link 6Link 7'
            Assert.AreEqual(this.ProjectIndex_Details_GPS_AssertDetailsExpectedValues.UIDetailsDocumentInnerText, uIDetailsDocument.InnerText);
        }
        
        /// <summary>
        /// ProjectIndex_GPS_AssertList - Use 'ProjectIndex_GPS_AssertListExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ProjectIndex_GPS_AssertList()
        {
            #region Variable Declarations
            HtmlTable uIItemTable = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIMainCustom.UIItemTable;
            #endregion

            // Verify that 'Unknown Name' table's property 'InnerText' contains 'GPS Global Pricing System Owner: erin.d.rakickas, joseph.m.curran'
            StringAssert.Contains(uIItemTable.InnerText, this.ProjectIndex_GPS_AssertListExpectedValues.UIItemTableInnerText);
        }
        
        #region Properties
        public virtual OpenProjectIndexPageParams OpenProjectIndexPageParams
        {
            get
            {
                if ((this.mOpenProjectIndexPageParams == null))
                {
                    this.mOpenProjectIndexPageParams = new OpenProjectIndexPageParams();
                }
                return this.mOpenProjectIndexPageParams;
            }
        }
        
        public virtual ProjectIndex_CreateNew_GPSDataParams ProjectIndex_CreateNew_GPSDataParams
        {
            get
            {
                if ((this.mProjectIndex_CreateNew_GPSDataParams == null))
                {
                    this.mProjectIndex_CreateNew_GPSDataParams = new ProjectIndex_CreateNew_GPSDataParams();
                }
                return this.mProjectIndex_CreateNew_GPSDataParams;
            }
        }
        
        public virtual ProjectIndex_Details_GPS_AssertDetailsExpectedValues ProjectIndex_Details_GPS_AssertDetailsExpectedValues
        {
            get
            {
                if ((this.mProjectIndex_Details_GPS_AssertDetailsExpectedValues == null))
                {
                    this.mProjectIndex_Details_GPS_AssertDetailsExpectedValues = new ProjectIndex_Details_GPS_AssertDetailsExpectedValues();
                }
                return this.mProjectIndex_Details_GPS_AssertDetailsExpectedValues;
            }
        }
        
        public virtual ProjectIndex_GPS_AssertListExpectedValues ProjectIndex_GPS_AssertListExpectedValues
        {
            get
            {
                if ((this.mProjectIndex_GPS_AssertListExpectedValues == null))
                {
                    this.mProjectIndex_GPS_AssertListExpectedValues = new ProjectIndex_GPS_AssertListExpectedValues();
                }
                return this.mProjectIndex_GPS_AssertListExpectedValues;
            }
        }
        
        public UIIndexWindowsInternetWindow UIIndexWindowsInternetWindow
        {
            get
            {
                if ((this.mUIIndexWindowsInternetWindow == null))
                {
                    this.mUIIndexWindowsInternetWindow = new UIIndexWindowsInternetWindow();
                }
                return this.mUIIndexWindowsInternetWindow;
            }
        }
        
        public UICreateWindowsInterneWindow UICreateWindowsInterneWindow
        {
            get
            {
                if ((this.mUICreateWindowsInterneWindow == null))
                {
                    this.mUICreateWindowsInterneWindow = new UICreateWindowsInterneWindow();
                }
                return this.mUICreateWindowsInterneWindow;
            }
        }
        
        public UIDetailsWindowsInternWindow UIDetailsWindowsInternWindow
        {
            get
            {
                if ((this.mUIDetailsWindowsInternWindow == null))
                {
                    this.mUIDetailsWindowsInternWindow = new UIDetailsWindowsInternWindow();
                }
                return this.mUIDetailsWindowsInternWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenProjectIndexPageParams mOpenProjectIndexPageParams;
        
        private ProjectIndex_CreateNew_GPSDataParams mProjectIndex_CreateNew_GPSDataParams;
        
        private ProjectIndex_Details_GPS_AssertDetailsExpectedValues mProjectIndex_Details_GPS_AssertDetailsExpectedValues;
        
        private ProjectIndex_GPS_AssertListExpectedValues mProjectIndex_GPS_AssertListExpectedValues;
        
        private UIIndexWindowsInternetWindow mUIIndexWindowsInternetWindow;
        
        private UICreateWindowsInterneWindow mUICreateWindowsInterneWindow;
        
        private UIDetailsWindowsInternWindow mUIDetailsWindowsInternWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenProjectIndexPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class OpenProjectIndexPageParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2425/Project'
        /// </summary>
        public string UIIndexWindowsInternetWindowUrl = "http://localhost:2425/Project";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ProjectIndex_CreateNew_GPSData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ProjectIndex_CreateNew_GPSDataParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'GPS' in 'Name' text box
        /// </summary>
        public string UINameEditText = "GPS";
        
        /// <summary>
        /// Type 'Global Pricing System' in 'Description' text box
        /// </summary>
        public string UIDescriptionEditText = "Global Pricing System";
        
        /// <summary>
        /// Type 'Owner:  erin.d.rakickas, joseph.m.curran' in 'ContactInfo' text box
        /// </summary>
        public string UIContactInfoEditText = "Owner:  erin.d.rakickas, joseph.m.curran";
        
        /// <summary>
        /// Select 'IsActive' check box
        /// </summary>
        public bool UIIsActiveCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ProjectIndex_Details_GPS_AssertDetails'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ProjectIndex_Details_GPS_AssertDetailsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Details' document's property 'InnerText' equals ' SQL deployment self service made easy...Home Admin Help Search   Details
        ///Project
        ///Name
        ///GPS 
        ///Description
        ///Global Pricing System 
        ///ContactInfo
        ///Owner: erin.d.rakickas, joseph.m.curran 
        ///IsActive
        ///  
        ///Edit | Back to List   
        ///© Accenture Performance Engeeinger & Data Arch Group 2011, All rights reserved. This tool is currently owned by Scott Albrecht . Sql Lint ToolContact USLink 3Link 4Link 5Link 6Link 7'
        /// </summary>
        public string UIDetailsDocumentInnerText = @" SQL deployment self service made easy...Home Admin Help Search   Details
Project
Name
GPS 
Description
Global Pricing System 
ContactInfo
Owner: erin.d.rakickas, joseph.m.curran 
IsActive
  
Edit | Back to List   
© Accenture Performance Engeeinger & Data Arch Group 2011, All rights reserved. This tool is currently owned by Scott Albrecht . Sql Lint ToolContact USLink 3Link 4Link 5Link 6Link 7";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ProjectIndex_GPS_AssertList'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class ProjectIndex_GPS_AssertListExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Unknown Name' table's property 'InnerText' contains 'GPS Global Pricing System Owner: erin.d.rakickas, joseph.m.curran'
        /// </summary>
        public string UIItemTableInnerText = "GPS Global Pricing System Owner: erin.d.rakickas, joseph.m.curran";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIndexWindowsInternetWindow : BrowserWindow
    {
        
        public UIIndexWindowsInternetWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index");
            this.WindowTitles.Add("http://localhost:2425/Project");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexDocument UIIndexDocument
        {
            get
            {
                if ((this.mUIIndexDocument == null))
                {
                    this.mUIIndexDocument = new UIIndexDocument(this);
                }
                return this.mUIIndexDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexDocument mUIIndexDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIIndexDocument : HtmlDocument
    {
        
        public UIIndexDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Project";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2425/Project";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public UIMainCustom UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom(this);
                }
                return this.mUIMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMainCustom mUIMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMainCustom : HtmlCustom
    {
        
        public UIMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "section";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=main";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Project/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:2425/Project/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Project/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Project/Details/7";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:2425/Project/Details/7";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Project//7\"";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "18";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private UIItemTable mUIItemTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Name Description ContactInfo IsActive \r\n";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = null;
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "8";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = null;
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIOwnerChapmanPaulSCell
        {
            get
            {
                if ((this.mUIOwnerChapmanPaulSCell == null))
                {
                    this.mUIOwnerChapmanPaulSCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIOwnerChapmanPaulSCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIOwnerChapmanPaulSCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIOwnerChapmanPaulSCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Owner: Chapman, Paul S. ";
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "5";
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIOwnerChapmanPaulSCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "23";
                    this.mUIOwnerChapmanPaulSCell.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIOwnerChapmanPaulSCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIOwnerChapmanPaulSCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICreateWindowsInterneWindow : BrowserWindow
    {
        
        public UICreateWindowsInterneWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateDocument UICreateDocument
        {
            get
            {
                if ((this.mUICreateDocument == null))
                {
                    this.mUICreateDocument = new UICreateDocument(this);
                }
                return this.mUICreateDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateDocument mUICreateDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICreateDocument : HtmlDocument
    {
        
        public UICreateDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Project/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2425/Project/Create";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Name";
                    this.mUINameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Name";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "text-box single-line";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=Name class=\"text-box single-line\" typ";
                    this.mUINameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUINameEdit.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        
        public HtmlEdit UIDescriptionEdit
        {
            get
            {
                if ((this.mUIDescriptionEdit == null))
                {
                    this.mUIDescriptionEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Description";
                    this.mUIDescriptionEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Description";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "text-box single-line";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=Description class=\"text-box single-li";
                    this.mUIDescriptionEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIDescriptionEdit.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIDescriptionEdit;
            }
        }
        
        public HtmlEdit UIContactInfoEdit
        {
            get
            {
                if ((this.mUIContactInfoEdit == null))
                {
                    this.mUIContactInfoEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIContactInfoEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ContactInfo";
                    this.mUIContactInfoEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ContactInfo";
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "ContactInfo";
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "text-box single-line";
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=ContactInfo class=\"text-box single-li";
                    this.mUIContactInfoEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIContactInfoEdit.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIContactInfoEdit;
            }
        }
        
        public HtmlCheckBox UIIsActiveCheckBox
        {
            get
            {
                if ((this.mUIIsActiveCheckBox == null))
                {
                    this.mUIIsActiveCheckBox = new HtmlCheckBox(this);
                    #region Search Criteria
                    this.mUIIsActiveCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Id] = "IsActive";
                    this.mUIIsActiveCheckBox.SearchProperties[HtmlCheckBox.PropertyNames.Name] = "IsActive";
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Value] = "true";
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.LabeledBy] = "IsActive";
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Title] = null;
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.Class] = "check-box";
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.ControlDefinition] = "id=IsActive class=check-box value=true t";
                    this.mUIIsActiveCheckBox.FilterProperties[HtmlCheckBox.PropertyNames.TagInstance] = "6";
                    this.mUIIsActiveCheckBox.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUIIsActiveCheckBox;
            }
        }
        
        public UIMainCustom1 UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom1(this);
                }
                return this.mUIMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUINameEdit;
        
        private HtmlEdit mUIDescriptionEdit;
        
        private HtmlEdit mUIContactInfoEdit;
        
        private HtmlCheckBox mUIIsActiveCheckBox;
        
        private UIMainCustom1 mUIMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMainCustom1 : HtmlCustom
    {
        
        public UIMainCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.SearchProperties["TagName"] = "section";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=main";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Create");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "value=Create type=submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUICreateButton.WindowTitles.Add("Create");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDetailsWindowsInternWindow : BrowserWindow
    {
        
        public UIDetailsWindowsInternWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Details";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Details");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public HtmlDocument UIDetailsDocument
        {
            get
            {
                if ((this.mUIDetailsDocument == null))
                {
                    this.mUIDetailsDocument = new HtmlDocument(this);
                    #region Search Criteria
                    this.mUIDetailsDocument.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
                    this.mUIDetailsDocument.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
                    this.mUIDetailsDocument.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
                    this.mUIDetailsDocument.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details";
                    this.mUIDetailsDocument.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Project/Details/7";
                    this.mUIDetailsDocument.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2425/Project/Details/7";
                    this.mUIDetailsDocument.WindowTitles.Add("Details");
                    #endregion
                }
                return this.mUIDetailsDocument;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDocument mUIDetailsDocument;
        #endregion
    }
}
