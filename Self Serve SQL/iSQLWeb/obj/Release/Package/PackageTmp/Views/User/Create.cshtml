@model iSql.Commons.Models.User

@{
    ViewBag.Title = "Create User Account";

    @* NOTE:
        In order to process manual SQL validation, now we need to add DBA role. 
        For now, ADFS only handle common user creation, all previleged accounts are created manually on purpose, based on security concerns.
    *@
    var sysRoleOptions = new SelectList(new List<string> { "Admin", "DBA", "Common User" } );
}

@using (Html.BeginForm()) {
  <div class="f">   
    @Html.ValidationSummary(true)
        <label for="userId">Enterprise ID:</label> @Html.EditorFor(model => model.UserId) @Html.ValidationMessageFor(model => model.UserId) <br />

        <label for="SystemRole"> System Role: </label>@Html.DropDownListFor(model => model.SystemRole, sysRoleOptions, "-- select role --")   @Html.ValidationMessageFor(model => model.SystemRole) <br />

        <label for="IsActive"> Is Active: </label>  @Html.EditorFor(model => model.IsActive) @Html.ValidationMessageFor(model => model.IsActive ) <br />

        <hr />

        <p> <input type="submit" class="submit" value="Create" /> <a href="@Url.Action("Index")" class="link" >Cancel</a> </p>
  </div>
}

@section js { 
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}